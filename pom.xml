<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ntvf</groupId>
    <artifactId>football-scoreboard</artifactId>
    <version>0.0.1</version>

    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <junit.version>5.7.0</junit.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <org.projectlombok.version>1.18.34</org.projectlombok.version>
        <slf4j-api.version>2.0.16</slf4j-api.version>
        <jacoco.plugin.version>0.8.12</jacoco.plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${org.projectlombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j-api.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${org.projectlombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.plugin.version}</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <phase>test</phase>
                    </execution>
                    <execution>
                        <id>unit-tests-coverage-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.80</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <failOnViolation>true</failOnViolation>
                            <logViolationsToConsole>true</logViolationsToConsole>
                            <violationSeverity>warning</violationSeverity>
                            <failsOnError>true</failsOnError>
                            <consoleOutput>true</consoleOutput>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                            <checkstyleRules>
                                <module name="Checker">
                                    <property name="charset" value="UTF-8"/>

                                    <property name="severity" value="warning"/>

                                    <property name="fileExtensions" value="java, properties, xml"/>
                                    <!-- Excludes all 'module-info.java' files              -->
                                    <!-- See https://checkstyle.org/config_filefilters.html -->
                                    <module name="BeforeExecutionExclusionFileFilter">
                                        <property name="fileNamePattern" value="module\-info\.java$"/>
                                    </module>
                                    <!-- https://checkstyle.org/config_filters.html#SuppressionFilter -->
                                    <module name="SuppressionFilter">
                                        <property name="file" value="${org.checkstyle.google.suppressionfilter.config}"
                                                  default="checkstyle-suppressions.xml"/>
                                        <property name="optional" value="true"/>
                                    </module>

                                    <!-- Checks for whitespace                               -->
                                    <!-- See http://checkstyle.org/config_whitespace.html -->
                                    <module name="FileTabCharacter">
                                        <property name="eachLine" value="true"/>
                                    </module>

                                    <module name="LineLength">
                                        <property name="fileExtensions" value="java"/>
                                        <property name="max" value="160"/>
                                        <property name="ignorePattern"
                                                  value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
                                    </module>

                                    <module name="SuppressWarningsFilter"/>

                                    <module name="TreeWalker">
                                        <module name="AvoidStarImport">
                                            <property name="severity" value="warning"/>
                                        </module>
                                        <module name="SuppressionCommentFilter"/>
                                        <module name="SuppressWarningsHolder"/>
                                        <module name="OuterTypeFilename"/>
                                        <module name="IllegalTokenText">
                                            <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
                                            <property name="format"
                                                      value="\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
                                            <property name="message"
                                                      value="Consider using special escape sequence instead of octal value or Unicode escaped value."/>
                                        </module>
                                        <module name="AvoidEscapedUnicodeCharacters">
                                            <property name="allowEscapesForControlCharacters" value="true"/>
                                            <property name="allowByTailComment" value="true"/>
                                            <property name="allowNonPrintableEscapes" value="true"/>
                                        </module>
                                        <module name="OneTopLevelClass"/>
                                        <module name="NoLineWrap">
                                            <property name="tokens" value="PACKAGE_DEF, IMPORT, STATIC_IMPORT"/>
                                        </module>
                                        <module name="EmptyBlock">
                                            <property name="option" value="TEXT"/>
                                            <property name="tokens"
                                                      value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
                                        </module>
                                        <module name="NeedBraces">
                                            <property name="tokens"
                                                      value="LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_IF, LITERAL_WHILE"/>
                                        </module>
                                        <module name="LeftCurly">
                                            <property name="tokens"
                                                      value="ANNOTATION_DEF, CLASS_DEF, CTOR_DEF, ENUM_CONSTANT_DEF, ENUM_DEF,
                                                INTERFACE_DEF, LAMBDA, LITERAL_CASE, LITERAL_CATCH, LITERAL_DEFAULT,
                                                LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF,
                                                LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, METHOD_DEF,
                                                OBJBLOCK, STATIC_INIT"/>
                                        </module>
                                        <module name="RightCurly">
                                            <property name="id" value="RightCurlySame"/>
                                            <property name="tokens"
                                                      value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE,
                                                        LITERAL_DO"/>
                                        </module>
                                        <module name="RightCurly">
                                            <property name="id" value="RightCurlyAlone"/>
                                            <property name="option" value="alone"/>
                                            <property name="tokens"
                                                      value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT,
                                                INSTANCE_INIT, ANNOTATION_DEF, ENUM_DEF"/>
                                        </module>
                                        <module name="WhitespaceAround">
                                            <property name="allowEmptyConstructors" value="true"/>
                                            <property name="allowEmptyLambdas" value="true"/>
                                            <property name="allowEmptyMethods" value="true"/>
                                            <property name="allowEmptyTypes" value="true"/>
                                            <property name="allowEmptyLoops" value="true"/>
                                            <property name="tokens"
                                                      value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR,
                                                    BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, DO_WHILE, EQUAL, GE, GT, LAMBDA, LAND,
                                                    LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY,
                                                    LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SWITCH, LITERAL_SYNCHRONIZED,
                                                    LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN,
                                                    NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, RCURLY, SL, SLIST, SL_ASSIGN, SR,
                                                    SR_ASSIGN, STAR, STAR_ASSIGN, LITERAL_ASSERT, TYPE_EXTENSION_AND"/>
                                            <message key="ws.notFollowed"
                                                     value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)"/>
                                            <message key="ws.notPreceded"
                                                     value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>
                                        </module>
                                        <module name="OneStatementPerLine"/>
                                        <module name="MultipleVariableDeclarations"/>
                                        <module name="ArrayTypeStyle"/>
                                        <module name="MissingSwitchDefault"/>
                                        <module name="FallThrough"/>
                                        <module name="UpperEll"/>
                                        <module name="ModifierOrder"/>
                                        <module name="EmptyLineSeparator">
                                            <property name="allowNoEmptyLineBetweenFields" value="true"/>
                                            <property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
                                        </module>
                                        <module name="SeparatorWrap">
                                            <property name="id" value="SeparatorWrapDot"/>
                                            <property name="tokens" value="DOT"/>
                                            <property name="option" value="nl"/>
                                        </module>
                                        <module name="SeparatorWrap">
                                            <property name="id" value="SeparatorWrapComma"/>
                                            <property name="tokens" value="COMMA"/>
                                            <property name="option" value="EOL"/>
                                        </module>
                                        <module name="SeparatorWrap">
                                            <!-- ELLIPSIS is EOL until https://github.com/google/styleguide/issues/258 -->
                                            <property name="id" value="SeparatorWrapEllipsis"/>
                                            <property name="tokens" value="ELLIPSIS"/>
                                            <property name="option" value="EOL"/>
                                        </module>
                                        <module name="SeparatorWrap">
                                            <!-- ARRAY_DECLARATOR is EOL until https://github.com/google/styleguide/issues/259 -->
                                            <property name="id" value="SeparatorWrapArrayDeclarator"/>
                                            <property name="tokens" value="ARRAY_DECLARATOR"/>
                                            <property name="option" value="EOL"/>
                                        </module>
                                        <module name="SeparatorWrap">
                                            <property name="id" value="SeparatorWrapMethodRef"/>
                                            <property name="tokens" value="METHOD_REF"/>
                                            <property name="option" value="nl"/>
                                        </module>
                                        <module name="PackageName">
                                            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
                                            <message key="name.invalidPattern"
                                                     value="Package name ''{0}'' must match pattern ''{1}''."/>
                                        </module>
                                        <module name="TypeName">
                                            <property name="tokens"
                                                      value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF"/>
                                            <message key="name.invalidPattern"
                                                     value="Type name ''{0}'' must match pattern ''{1}''."/>
                                        </module>
                                        <module name="MemberName">
                                            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
                                            <message key="name.invalidPattern"
                                                     value="Member name ''{0}'' must match pattern ''{1}''."/>
                                        </module>
                                        <module name="ParameterName">
                                            <property name="format" value="^[a-z]([a-zA-Z0-9]*)?$"/>
                                            <message key="name.invalidPattern"
                                                     value="Parameter name ''{0}'' must match pattern ''{1}''."/>
                                        </module>
                                        <module name="LambdaParameterName">
                                            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
                                            <message key="name.invalidPattern"
                                                     value="Lambda parameter name ''{0}'' must match pattern ''{1}''."/>
                                        </module>
                                        <module name="CatchParameterName">
                                            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
                                            <message key="name.invalidPattern"
                                                     value="Catch parameter name ''{0}'' must match pattern ''{1}''."/>
                                        </module>
                                        <module name="LocalVariableName">
                                            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
                                            <message key="name.invalidPattern"
                                                     value="Local variable name ''{0}'' must match pattern ''{1}''."/>
                                        </module>
                                        <module name="ClassTypeParameterName">
                                            <property name="format"
                                                      value="(^[A-Z]+[a-zA-z]*[0-9]*)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
                                            <message key="name.invalidPattern"
                                                     value="Class type name ''{0}'' must match pattern ''{1}''."/>
                                        </module>
                                        <module name="MethodTypeParameterName">
                                            <property name="format"
                                                      value="(^[A-Z]+[a-zA-z]*[0-9]*)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
                                            <message key="name.invalidPattern"
                                                     value="Method type name ''{0}'' must match pattern ''{1}''."/>
                                        </module>
                                        <module name="InterfaceTypeParameterName">
                                            <property name="format"
                                                      value="(^[A-Z]+[a-zA-z]*[0-9]*)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
                                            <message key="name.invalidPattern"
                                                     value="Interface type name ''{0}'' must match pattern ''{1}''."/>
                                        </module>
                                        <module name="NoFinalizer"/>
                                        <module name="GenericWhitespace">
                                            <message key="ws.followed"
                                                     value="GenericWhitespace ''{0}'' is followed by whitespace."/>
                                            <message key="ws.preceded"
                                                     value="GenericWhitespace ''{0}'' is preceded with whitespace."/>
                                            <message key="ws.illegalFollow"
                                                     value="GenericWhitespace ''{0}'' should followed by whitespace."/>
                                            <message key="ws.notPreceded"
                                                     value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
                                        </module>
                                        <module name="Indentation">
                                            <property name="basicOffset" value="4"/>
                                            <property name="braceAdjustment" value="0"/>
                                            <property name="caseIndent" value="4"/>
                                            <property name="throwsIndent" value="8"/>
                                            <property name="lineWrappingIndentation" value="8"/>
                                            <property name="arrayInitIndent" value="4"/>
                                        </module>
                                        <module name="AbbreviationAsWordInName">
                                            <property name="ignoreFinal" value="false"/>
                                            <property name="allowedAbbreviationLength" value="1"/>
                                            <property name="tokens"
                                                      value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, ANNOTATION_FIELD_DEF,
                                                PARAMETER_DEF, VARIABLE_DEF, METHOD_DEF"/>
                                        </module>
                                        <module name="OverloadMethodsDeclarationOrder"/>
                                        <module name="VariableDeclarationUsageDistance"/>
                                        <module name="IllegalImport"/>
                                        <module name="RedundantImport"/>
                                        <module name="UnusedImports"/>
                                        <module name="MethodParamPad">
                                            <property name="tokens"
                                                      value="CTOR_DEF, LITERAL_NEW, METHOD_CALL, METHOD_DEF,
                                               SUPER_CTOR_CALL, ENUM_CONSTANT_DEF"/>
                                        </module>
                                        <module name="NoWhitespaceBefore">
                                            <property name="tokens"
                                                      value="COMMA, SEMI, POST_INC, POST_DEC, DOT, ELLIPSIS, METHOD_REF"/>
                                            <property name="allowLineBreaks" value="true"/>
                                        </module>
                                        <module name="ParenPad">
                                            <property name="tokens"
                                                      value="ANNOTATION, ANNOTATION_FIELD_DEF, CTOR_CALL, CTOR_DEF, DOT, ENUM_CONSTANT_DEF,
                                                    EXPR, LITERAL_CATCH, LITERAL_DO, LITERAL_FOR, LITERAL_IF, LITERAL_NEW,
                                                    LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_WHILE, METHOD_CALL,
                                                    METHOD_DEF, QUESTION, RESOURCE_SPECIFICATION, SUPER_CTOR_CALL, LAMBDA"/>
                                        </module>
                                        <module name="OperatorWrap">
                                            <property name="option" value="NL"/>
                                            <property name="tokens"
                                                      value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR,
                                                LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF "/>
                                        </module>
                                        <module name="AnnotationLocation">
                                            <property name="id" value="AnnotationLocationMostCases"/>
                                            <property name="tokens"
                                                      value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF"/>
                                        </module>
                                        <module name="AnnotationLocation">
                                            <property name="id" value="AnnotationLocationVariables"/>
                                            <property name="tokens" value="VARIABLE_DEF"/>
                                            <property name="allowSamelineMultipleAnnotations" value="true"/>
                                        </module>
                                        <module name="NonEmptyAtclauseDescription"/>
                                        <module name="InvalidJavadocPosition"/>
                                        <module name="JavadocTagContinuationIndentation"/>
                                        <module name="SummaryJavadoc">
                                            <property name="forbiddenSummaryFragments"
                                                      value="^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )"/>
                                        </module>
                                        <module name="JavadocParagraph"/>
                                        <module name="AtclauseOrder">
                                            <property name="tagOrder" value="@param, @return, @throws, @deprecated"/>
                                            <property name="target"
                                                      value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
                                        </module>
                                        <module name="JavadocMethod">
                                            <property name="accessModifiers" value="public"/>
                                            <property name="allowMissingParamTags" value="true"/>
                                            <property name="allowMissingReturnTag" value="true"/>
                                            <property name="allowedAnnotations" value="Override, Test"/>
                                            <property name="tokens" value="METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF"/>
                                        </module>
                                        <module name="MethodName">
                                            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
                                            <message key="name.invalidPattern"
                                                     value="Method name ''{0}'' must match pattern ''{1}''."/>
                                        </module>
                                        <module name="SingleLineJavadoc">
                                            <property name="ignoreInlineTags" value="false"/>
                                        </module>
                                        <module name="EmptyCatchBlock">
                                            <property name="exceptionVariableName" value="expected"/>
                                        </module>
                                        <!-- https://checkstyle.org/config_filters.html#SuppressionXpathFilter -->
                                        <module name="SuppressionXpathFilter">
                                            <property name="file"
                                                      value="${org.checkstyle.google.suppressionxpathfilter.config}"
                                                      default="checkstyle-xpath-suppressions.xml"/>
                                            <property name="optional" value="true"/>
                                        </module>
                                    </module>
                                </module>
                            </checkstyleRules>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>